basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  lib.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Create:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.Credentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.DataResponseOk:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  models.ListResponseOk:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.User'
        type: array
      message:
        type: string
    type: object
  models.ResponseStatus:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.StatusOk:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server API with fiber server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /api/user:
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Search
        in: query
        name: search
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListResponseOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      security:
      - Bearer: []
      summary: Show all users
      tags:
      - users
  /login:
    post:
      consumes:
      - application/json
      description: Login bro
      parameters:
      - description: The input todo struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DataResponseOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseStatus'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseStatus'
      summary: Login User
      tags:
      - Login
  /user:
    post:
      consumes:
      - application/json
      description: create
      parameters:
      - description: The input todo struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DataResponseOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      summary: Create an User
      tags:
      - users
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StatusOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      summary: Delete an User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: get User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DataResponseOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      summary: Show an User By ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: The input todo struct
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Create'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DataResponseOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.ErrorResponse'
      summary: Update an User
      tags:
      - users
securityDefinitions:
  Bearer:
    description: use `Bearer <xx token xx>` to authenticate
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
